/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.project.mobileshop.panels;

import com.project.mobileshop.controller.CustomerController;
import com.project.mobileshop.controller.MobileDetailController;
import com.project.mobileshop.controller.ReturnMobileController;
import com.project.mobileshop.controller.SupplierController;
import com.project.mobileshop.core.dto.CustomDTO;
import com.project.mobileshop.core.dto.CustomerDTO;
import com.project.mobileshop.core.dto.MobileDetailDTO;
import com.project.mobileshop.core.dto.ReturnMobileDTO;
import com.project.mobileshop.core.dto.SupplierDTO;
import com.project.mobileshop.db.DBConnection;
import com.project.mobileshop.view.JoptionMessageDialog;
import java.awt.Color;
import java.awt.Dialog;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import lk.ijse.jasper.IJSEJasperViewer;
import lk.ijse.jasper.JasperUtil;
import lk.ijse.jasper.Report;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperReportsContext;

/**
 *
 * @author Janitha Dhananjaya
 */
@Report("com.project.mobileshop.report")
public class ViewAllReturnMobiles extends javax.swing.JDialog {

    /**
     * Creates new form ViewAllReturnMobiles
     */
    public ViewAllReturnMobiles(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        LoadAllReturnMobiles();
        setBackground(new Color(0, 0, 0, 0.7f));
        LoadReturnMobileCount();
        LoadWarrentyTypes();
    }

    public void LoadAllReturnMobiles() {
        try {
            ArrayList<ReturnMobileDTO> all = ReturnMobileController.getAll();
            if (all != null) {
                dtm = (DefaultTableModel) returnMobileTable.getModel();
                dtm.setRowCount(0);
                for (ReturnMobileDTO a : all) {

                    String customerId = a.getCustomerId();
                    CustomerDTO customerDTO = new CustomerDTO();
                    customerDTO.setCustomerId(customerId);
                    CustomerDTO name = CustomerController.searchFromID(customerDTO);

                    String custmoerName = name.getCustomerName();

                    String supplierId = a.getSupplierId();
                    SupplierDTO dTO = new SupplierDTO();
                    dTO.setSupplierId(supplierId);
                    SupplierDTO supplier = SupplierController.searchSupplier(dTO);

                    String supplierName = supplier.getSupplierName();

                    Object[] row = {a.getReturnId(), a.getIMEINo(), a.getCurDate(), a.getSoldDate(), a.getWarranty(), a.getIssue(), custmoerName, supplierName, a.getSoldInvId()};
                    dtm.addRow(row);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        returnMobileTable = new org.jdesktop.swingx.JXTable();
        backBtn = new org.jdesktop.swingx.JXLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mobileTable = new org.jdesktop.swingx.JXTable();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        modelNameSearchTxt = new org.jdesktop.swingx.JXSearchField();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        supplierNameSearchTxt = new org.jdesktop.swingx.JXSearchField();
        jXLabel8 = new org.jdesktop.swingx.JXLabel();
        warrantyCmb = new org.jdesktop.swingx.JXComboBox();
        getInvoiceBtn = new org.jdesktop.swingx.JXLabel();
        returnMobileCountTxt = new org.jdesktop.swingx.JXTextField();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jXLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel2.setText("View All");
        jXLabel2.setFont(new java.awt.Font("Lucida Bright", 1, 36)); // NOI18N
        getContentPane().add(jXLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 180, 50));

        returnMobileTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Return No", "IMEI No", "Return Date", "Sold Date", "Warrenty Period", "Issue", "Customer Name", "Supplier Name", "Sold Invoice No"
            }
        ));
        returnMobileTable.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        returnMobileTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnMobileTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(returnMobileTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 1010, 220));

        backBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        backBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backBtn.setText("Back");
        backBtn.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        backBtn.setOpaque(true);
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backBtnMouseExited(evt);
            }
        });
        getContentPane().add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 620, 100, 40));

        jXLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel4.setText("Return Mobile Count");
        jXLabel4.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        getContentPane().add(jXLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 610, 210, 50));

        mobileTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Brand", "Model Name", "Model No", "Colour", "Warrenty Period", "Year"
            }
        ));
        mobileTable.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jScrollPane2.setViewportView(mobileTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 370, 560, 230));

        jXLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel6.setText("Model Name");
        jXLabel6.setFont(new java.awt.Font("Lucida Bright", 1, 16)); // NOI18N
        getContentPane().add(jXLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, 130, 40));

        modelNameSearchTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        modelNameSearchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelNameSearchTxtActionPerformed(evt);
            }
        });
        getContentPane().add(modelNameSearchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, 180, 30));

        jXLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel7.setText("Supplier Name");
        jXLabel7.setFont(new java.awt.Font("Lucida Bright", 1, 16)); // NOI18N
        getContentPane().add(jXLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 80, 130, 40));

        supplierNameSearchTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        supplierNameSearchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierNameSearchTxtActionPerformed(evt);
            }
        });
        supplierNameSearchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                supplierNameSearchTxtKeyTyped(evt);
            }
        });
        getContentPane().add(supplierNameSearchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 80, 180, 30));

        jXLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel8.setText("Warrenty");
        jXLabel8.setFont(new java.awt.Font("Lucida Bright", 1, 16)); // NOI18N
        getContentPane().add(jXLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 80, 130, 40));

        warrantyCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                warrantyCmbItemStateChanged(evt);
            }
        });
        getContentPane().add(warrantyCmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 80, 180, 30));

        getInvoiceBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getInvoiceBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getInvoiceBtn.setText("Get Invoice");
        getInvoiceBtn.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        getInvoiceBtn.setOpaque(true);
        getInvoiceBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getInvoiceBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                getInvoiceBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                getInvoiceBtnMouseExited(evt);
            }
        });
        getContentPane().add(getInvoiceBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 440, 160, 40));

        returnMobileCountTxt.setEditable(false);
        returnMobileCountTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        returnMobileCountTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        returnMobileCountTxt.setFont(new java.awt.Font("Lucida Bright", 1, 36)); // NOI18N
        returnMobileCountTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnMobileCountTxtActionPerformed(evt);
            }
        });
        getContentPane().add(returnMobileCountTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 610, 170, 40));

        jXLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jXLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jXLabel1.setOpaque(true);
        getContentPane().add(jXLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, 1060, 680));

        setBounds(0, 90, 1366, 680);
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        dispose();
    }//GEN-LAST:event_backBtnMouseClicked

    private void returnMobileTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnMobileTableMouseClicked
        int selectedRow = returnMobileTable.getSelectedRow();
        String IMEINo = returnMobileTable.getValueAt(selectedRow, 1).toString();
        try {
            CustomDTO Mobile = ReturnMobileController.getFromIMEINo(IMEINo);

            MobileDetailDTO dTO = new MobileDetailDTO();
            dTO.setIMEIno(IMEINo);
            MobileDetailDTO colour = MobileDetailController.getColour(dTO);

            if (Mobile != null) {
                dtm = (DefaultTableModel) mobileTable.getModel();
                dtm.setRowCount(0);
                Object[] row = {Mobile.getBrand(), Mobile.getModelName(), Mobile.getModelNo(), colour.getColur(),
                    Mobile.getWarrentyPeriod(), Mobile.getYear()};
                dtm.addRow(row);
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_returnMobileTableMouseClicked

    private void returnMobileCountTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnMobileCountTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_returnMobileCountTxtActionPerformed

    private void getInvoiceBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getInvoiceBtnMouseClicked
        if (returnMobileTable.getSelectedRow() == -1) {
            String content = "Select a Mobile";
            JoptionMessageDialog dialog = new JoptionMessageDialog(null, true);
            dialog.getContent(content);
            return;
        }
        int selectedRow = returnMobileTable.getSelectedRow();
        JasperUtil.init(ViewAllReturnMobiles.class);

        JasperReportsContext ctx = JasperUtil.getReportContext();

        try {
            JasperReport compiledReport = JasperUtil.getCompiledReport("Invoice.jasper");

            JasperFillManager fillManager = JasperFillManager.getInstance(ctx);

            HashMap<String, Object> reportParams = new HashMap<>();

            reportParams.put("invoiceid", returnMobileTable.getValueAt(selectedRow, 8));

            Connection connection = DBConnection.getInstance().getConnection();
            JasperPrint filledReport = fillManager.fill(compiledReport, reportParams, connection);

            IJSEJasperViewer frmJSEJasperViewer = new IJSEJasperViewer(filledReport);
            frmJSEJasperViewer.setTitle("Invoice Details");
            frmJSEJasperViewer.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
            frmJSEJasperViewer.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getInvoiceBtnMouseClicked

    private void modelNameSearchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelNameSearchTxtActionPerformed
        if (modelNameSearchTxt.getText().equals("")) {
            LoadAllReturnMobiles();
            return;
        }

        String modelName = modelNameSearchTxt.getText();
        try {
            ArrayList<ReturnMobileDTO> result = ReturnMobileController.searchFromModelName(modelName);
            if (result != null) {
                dtm = (DefaultTableModel) returnMobileTable.getModel();
                dtm.setRowCount(0);
                for (ReturnMobileDTO a : result) {

                    String customerId = a.getCustomerId();
                    CustomerDTO customerDTO = new CustomerDTO();
                    customerDTO.setCustomerId(customerId);
                    CustomerDTO name = CustomerController.searchFromID(customerDTO);

                    String custmoerName = name.getCustomerName();

                    String supplierId = a.getSupplierId();
                    SupplierDTO dTO = new SupplierDTO();
                    dTO.setSupplierId(supplierId);
                    SupplierDTO supplier = SupplierController.searchSupplier(dTO);

                    String supplierName = supplier.getSupplierName();

                    Object[] row = {a.getReturnId(), a.getIMEINo(), a.getCurDate(), a.getSoldDate(), a.getWarranty(), a.getIssue(), custmoerName, supplierName, a.getSoldInvId()};
                    dtm.addRow(row);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_modelNameSearchTxtActionPerformed

    private void supplierNameSearchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierNameSearchTxtActionPerformed
        if (supplierNameSearchTxt.getText().equals("")) {
            LoadAllReturnMobiles();
            return;
        }

        String supplierName = supplierNameSearchTxt.getText();
        try {
            ArrayList<ReturnMobileDTO> result = ReturnMobileController.searchFromSupplierName(supplierName);
            if (result != null) {
                dtm = (DefaultTableModel) returnMobileTable.getModel();
                dtm.setRowCount(0);
                for (ReturnMobileDTO a : result) {

                    String customerId = a.getCustomerId();
                    CustomerDTO customerDTO = new CustomerDTO();
                    customerDTO.setCustomerId(customerId);
                    CustomerDTO name = CustomerController.searchFromID(customerDTO);

                    String custmoerName = name.getCustomerName();
                    Object[] row = {a.getReturnId(), a.getIMEINo(), a.getCurDate(), a.getSoldDate(), a.getWarranty(), a.getIssue(), custmoerName, supplierName, a.getSoldInvId()};
                    dtm.addRow(row);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_supplierNameSearchTxtActionPerformed

    private void warrantyCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_warrantyCmbItemStateChanged
        String warrentyType = warrantyCmb.getSelectedItem().toString();
        try {
            ArrayList<ReturnMobileDTO> result = ReturnMobileController.searchFromWarrentyType(warrentyType);
            if (result != null) {
                dtm = (DefaultTableModel) returnMobileTable.getModel();
                dtm.setRowCount(0);
                for (ReturnMobileDTO a : result) {

                    String customerId = a.getCustomerId();
                    CustomerDTO customerDTO = new CustomerDTO();
                    customerDTO.setCustomerId(customerId);
                    CustomerDTO name = CustomerController.searchFromID(customerDTO);

                    String custmoerName = name.getCustomerName();

                    String supplierId = a.getSupplierId();
                    SupplierDTO dTO = new SupplierDTO();
                    dTO.setSupplierId(supplierId);
                    SupplierDTO supplier = SupplierController.searchSupplier(dTO);

                    String supplierName = supplier.getSupplierName();

                    Object[] row = {a.getReturnId(), a.getIMEINo(), a.getCurDate(), a.getSoldDate(), a.getWarranty(), a.getIssue(), custmoerName, supplierName, a.getSoldInvId()};
                    dtm.addRow(row);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_warrantyCmbItemStateChanged

    private void supplierNameSearchTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supplierNameSearchTxtKeyTyped
        char keyChar = evt.getKeyChar();
        String IMEI = supplierNameSearchTxt.getText();
        if (Character.isDigit(keyChar)) {
            evt.consume();
        }
    }//GEN-LAST:event_supplierNameSearchTxtKeyTyped

    private void getInvoiceBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getInvoiceBtnMouseEntered
        getInvoiceBtn.setBackground(new Color(23, 114, 81));
        getInvoiceBtn.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_getInvoiceBtnMouseEntered

    private void getInvoiceBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getInvoiceBtnMouseExited
        getInvoiceBtn.setBackground(new Color(255, 255, 255));
        getInvoiceBtn.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_getInvoiceBtnMouseExited

    private void backBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseExited
        backBtn.setBackground(new Color(255, 255, 255));
        backBtn.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_backBtnMouseExited

    private void backBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseEntered
        backBtn.setBackground(new Color(23, 114, 81));
        backBtn.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_backBtnMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ViewAllReturnMobiles dialog = new ViewAllReturnMobiles(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXLabel backBtn;
    private org.jdesktop.swingx.JXLabel getInvoiceBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXLabel jXLabel6;
    private org.jdesktop.swingx.JXLabel jXLabel7;
    private org.jdesktop.swingx.JXLabel jXLabel8;
    private org.jdesktop.swingx.JXTable mobileTable;
    private org.jdesktop.swingx.JXSearchField modelNameSearchTxt;
    private org.jdesktop.swingx.JXTextField returnMobileCountTxt;
    private org.jdesktop.swingx.JXTable returnMobileTable;
    private org.jdesktop.swingx.JXSearchField supplierNameSearchTxt;
    private org.jdesktop.swingx.JXComboBox warrantyCmb;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel dtm = null;

    private void LoadReturnMobileCount() {
        try {
            CustomDTO count = ReturnMobileController.getCount();
            returnMobileCountTxt.setText(String.valueOf(count.getCount()));
        } catch (Exception ex) {
            Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void LoadWarrentyTypes() {
        try {
            ArrayList<ReturnMobileDTO> all = ReturnMobileController.LoadWarrentyTyps();
            if (all != null) {
                for (ReturnMobileDTO a : all) {
                    warrantyCmb.addItem(a.getWarranty());
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewAllReturnMobiles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
