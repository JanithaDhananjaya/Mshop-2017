/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.project.mobileshop.panels;

import com.project.mobileshop.controller.ModelController;
import com.project.mobileshop.core.dto.BatchDTO;
import com.project.mobileshop.core.dto.CustomDTO;
import com.project.mobileshop.core.dto.MobileDetailDTO;
import com.project.mobileshop.core.dto.ModelDTO;
import com.project.mobileshop.view.JoptionMessageDialog;
import com.project.mobileshop.view.StockMoreDetailDialog;
import com.project.mobileshop.view.stockBatchDetailsDialog;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Janitha Dhananjaya
 */
public class Stock extends javax.swing.JPanel {

    /**
     * Creates new form Stock
     */
    public Stock() {
        initComponents();
        LoadAllDetails();
        LoadBrands();
        pricetable.getTableHeader().setFont(pricetable.getFont().deriveFont(18f));
    }

    public void LoadBrands() {
        try {
            ArrayList<ModelDTO> LoadModelNos = ModelController.getBrands();
            for (ModelDTO M : LoadModelNos) {
                brand_Combo.addItem(M.getBrand());
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrderPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(OrderPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LoadAllDetails() {
        try {
            ArrayList<CustomDTO> allDetails = ModelController.getAllDetails();
            if (allDetails == null) {
                return;
            }
            DefaultTableModel dtm = (DefaultTableModel) pricetable.getModel();
            dtm.setRowCount(0);
            for (CustomDTO a : allDetails) {
                Object[] row = {a.getBrand(), a.getModelName(), a.getModelNo(), a.getQtyOnHand(), a.getWarrentyPeriod(), a.getYear(), a.getSellingPrice()};
                dtm.addRow(row);
            }
        } catch (Exception ex) {
            Logger.getLogger(StockPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        batchDetailsBtn = new org.jdesktop.swingx.JXLabel();
        mobileDetailsBtn = new org.jdesktop.swingx.JXLabel();
        loadAllBtn = new org.jdesktop.swingx.JXLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pricetable = new org.jdesktop.swingx.JXTable();
        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        brand_Combo = new org.jdesktop.swingx.JXComboBox();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        IMEINoTxxt = new org.jdesktop.swingx.JXSearchField();
        yearTxt = new org.jdesktop.swingx.JXSearchField();
        priceSearchField = new org.jdesktop.swingx.JXSearchField();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1060, 680));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jXLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jXLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jXLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel1.setText("Stock");
        jXLabel1.setFont(new java.awt.Font("Lucida Bright", 1, 48)); // NOI18N
        jXLabel1.setOpaque(true);
        add(jXLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 180, 50));

        batchDetailsBtn.setBackground(new java.awt.Color(255, 255, 255));
        batchDetailsBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        batchDetailsBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        batchDetailsBtn.setText("Batch Details");
        batchDetailsBtn.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        batchDetailsBtn.setOpaque(true);
        batchDetailsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                batchDetailsBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                batchDetailsBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                batchDetailsBtnMouseExited(evt);
            }
        });
        add(batchDetailsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 540, 140, 50));

        mobileDetailsBtn.setBackground(new java.awt.Color(255, 255, 255));
        mobileDetailsBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mobileDetailsBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mobileDetailsBtn.setText("Mobile Details");
        mobileDetailsBtn.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        mobileDetailsBtn.setOpaque(true);
        mobileDetailsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mobileDetailsBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mobileDetailsBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mobileDetailsBtnMouseExited(evt);
            }
        });
        add(mobileDetailsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 540, 150, 50));

        loadAllBtn.setBackground(new java.awt.Color(255, 255, 255));
        loadAllBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        loadAllBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loadAllBtn.setText("Load All");
        loadAllBtn.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        loadAllBtn.setOpaque(true);
        loadAllBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadAllBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loadAllBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loadAllBtnMouseExited(evt);
            }
        });
        add(loadAllBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 540, 120, 50));

        pricetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand", "Model Name", "Model No", "Qty On Hand", "Warrenty Period", "Year", "Price"
            }
        ));
        pricetable.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(pricetable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 990, 300));

        jXPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jXPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(23, 114, 81), 2), "Search From", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Bright", 1, 12))); // NOI18N
        jXPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        brand_Combo.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        brand_Combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brand_ComboActionPerformed(evt);
            }
        });
        jXPanel1.add(brand_Combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 170, 30));

        jXLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel2.setText("Price");
        jXLabel2.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        jXPanel1.add(jXLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, 70, 30));

        jXLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel3.setText("Brand");
        jXLabel3.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        jXPanel1.add(jXLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 70, 30));

        jXLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel4.setText("Year");
        jXLabel4.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        jXPanel1.add(jXLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 70, 30));

        jXLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel5.setText("IMEI No");
        jXLabel5.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        jXPanel1.add(jXLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 70, 30));

        IMEINoTxxt.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        IMEINoTxxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IMEINoTxxtActionPerformed(evt);
            }
        });
        jXPanel1.add(IMEINoTxxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, 150, 30));

        yearTxt.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        yearTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearTxtActionPerformed(evt);
            }
        });
        jXPanel1.add(yearTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 140, 30));

        priceSearchField.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        priceSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceSearchFieldActionPerformed(evt);
            }
        });
        jXPanel1.add(priceSearchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 140, 30));

        add(jXPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1000, 70));
    }// </editor-fold>//GEN-END:initComponents

    private void loadAllBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadAllBtnMouseEntered
        loadAllBtn.setBackground(new Color(23, 114, 81));
        loadAllBtn.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_loadAllBtnMouseEntered

    private void loadAllBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadAllBtnMouseExited
        loadAllBtn.setBackground(new Color(255, 255, 255));
        loadAllBtn.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_loadAllBtnMouseExited

    private void batchDetailsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_batchDetailsBtnMouseClicked
        if (pricetable.getSelectedRow() == -1) {
            //JOptionPane.showMessageDialog(this, "Select a model");
            String content = "Select a model";
            JoptionMessageDialog dialog = new JoptionMessageDialog(null, true);
            dialog.getContent(content);
            return;
        }

        int selectedRow = pricetable.getSelectedRow();
        String modelNo = pricetable.getValueAt(selectedRow, 2).toString();
        String modelName = pricetable.getValueAt(selectedRow, 1).toString();

        System.out.println("model No  " + modelNo);

        BatchDTO batchDTO = new BatchDTO();
        batchDTO.setModelNo(modelNo);

        stockBatchDetailsDialog dialog = new stockBatchDetailsDialog(null, true);
        try {
            dialog.setBatchNos(batchDTO, modelName);
        } catch (Exception ex) {
            Logger.getLogger(StockPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        dialog.setVisible(true);

    }//GEN-LAST:event_batchDetailsBtnMouseClicked

    private void batchDetailsBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_batchDetailsBtnMouseEntered
        batchDetailsBtn.setBackground(new Color(23, 114, 81));
        batchDetailsBtn.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_batchDetailsBtnMouseEntered

    private void batchDetailsBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_batchDetailsBtnMouseExited
        batchDetailsBtn.setBackground(new Color(255, 255, 255));
        batchDetailsBtn.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_batchDetailsBtnMouseExited

    private void mobileDetailsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mobileDetailsBtnMouseClicked
        if (pricetable.getSelectedRow() == -1) {
            String content = "Select a model";
            JoptionMessageDialog dialog = new JoptionMessageDialog(null, true);
            dialog.getContent(content);
            return;
        }

        int selectedRow = pricetable.getSelectedRow();

        ModelDTO modelDTO = new ModelDTO(
                pricetable.getValueAt(selectedRow, 0).toString(),
                pricetable.getValueAt(selectedRow, 1).toString(),
                pricetable.getValueAt(selectedRow, 2).toString(),
                Integer.parseInt(pricetable.getValueAt(selectedRow, 3).toString()),
                Integer.parseInt(pricetable.getValueAt(selectedRow, 4).toString()),
                Integer.parseInt(pricetable.getValueAt(selectedRow, 5).toString())
        );

        StockMoreDetailDialog dialog = new StockMoreDetailDialog(null, true);
        try {
            dialog.moreDetails(modelDTO);
        } catch (Exception ex) {
            Logger.getLogger(StockPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        dialog.setVisible(true);

    }//GEN-LAST:event_mobileDetailsBtnMouseClicked

    private void mobileDetailsBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mobileDetailsBtnMouseEntered
        mobileDetailsBtn.setBackground(new Color(23, 114, 81));
        mobileDetailsBtn.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_mobileDetailsBtnMouseEntered

    private void mobileDetailsBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mobileDetailsBtnMouseExited
        mobileDetailsBtn.setBackground(new Color(255, 255, 255));
        mobileDetailsBtn.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_mobileDetailsBtnMouseExited

    private void brand_ComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brand_ComboActionPerformed
        if (brand_Combo.getSelectedIndex() == -1) {
            return;
        }
        String brand = brand_Combo.getSelectedItem().toString();
        try {
            ArrayList<CustomDTO> all = ModelController.getModelNames(brand);
            DefaultTableModel dtm = (DefaultTableModel) pricetable.getModel();
            dtm.setRowCount(0);
            if (all != null) {
                for (CustomDTO a : all) {
                    Object[] row = {a.getBrand(), a.getModelName(), a.getModelNo(), a.getQtyOnHand(), a.getWarrentyPeriod(), a.getYear(), a.getSellingPrice()};
                    dtm.addRow(row);
                }

            }
        } catch (Exception ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_brand_ComboActionPerformed

    private void loadAllBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadAllBtnMouseClicked
        LoadAllDetails();
    }//GEN-LAST:event_loadAllBtnMouseClicked

    private void yearTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearTxtActionPerformed
        String year = yearTxt.getText();
        try {
            ArrayList<CustomDTO> yearList = ModelController.searchFromYear(year);
            DefaultTableModel dtm = (DefaultTableModel) pricetable.getModel();
            dtm.setRowCount(0);
            if (yearList != null) {
                for (CustomDTO a : yearList) {
                    Object[] row = {a.getBrand(), a.getModelName(), a.getModelNo(), a.getQtyOnHand(), a.getWarrentyPeriod(), a.getYear(), a.getSellingPrice(), a.getSellingPrice()};
                    dtm.addRow(row);
                }

            }
        } catch (Exception ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_yearTxtActionPerformed

    private void IMEINoTxxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IMEINoTxxtActionPerformed
        String IMEINo = IMEINoTxxt.getText();

        try {
            CustomDTO model = ModelController.searchFromIMEINo(IMEINo);
            if (model != null) {
                DefaultTableModel dtm = (DefaultTableModel) pricetable.getModel();
                dtm.setRowCount(0);
                Object[] row = {model.getBrand(), model.getModelName(), model.getModelNo(), model.getQtyOnHand(), model.getWarrentyPeriod(), model.getYear(), model.getSellingPrice()};
                dtm.addRow(row);

            }
        } catch (Exception ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_IMEINoTxxtActionPerformed

    private void priceSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceSearchFieldActionPerformed
        String price = priceSearchField.getText();
        try {
            ArrayList<CustomDTO> searchFromPrice = ModelController.searchFromPrice(price);
            System.out.println("array list ekata awa");
            System.out.println("list " + searchFromPrice.toString());
            if (searchFromPrice != null) {
                System.out.println("nul nemei");
                DefaultTableModel dtm = (DefaultTableModel) pricetable.getModel();
                dtm.setRowCount(0);
                for (CustomDTO c : searchFromPrice) {
                    System.out.println(c.getOriginalPrice());
                    Object[] row = {c.getBrand(), c.getModelName(), c.getModelNo(), c.getQtyOnHand(), c.getWarrentyPeriod(), c.getYear(), c.getSellingPrice()};
                    dtm.addRow(row);
                }
            } else {
                System.out.println("null thmai");
            }
        } catch (Exception ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_priceSearchFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXSearchField IMEINoTxxt;
    private org.jdesktop.swingx.JXLabel batchDetailsBtn;
    private org.jdesktop.swingx.JXComboBox brand_Combo;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXLabel jXLabel5;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    private org.jdesktop.swingx.JXLabel loadAllBtn;
    private org.jdesktop.swingx.JXLabel mobileDetailsBtn;
    private org.jdesktop.swingx.JXSearchField priceSearchField;
    private org.jdesktop.swingx.JXTable pricetable;
    private org.jdesktop.swingx.JXSearchField yearTxt;
    // End of variables declaration//GEN-END:variables
}
